name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: mydatabase
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U myuser" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        working-directory: ./inventario-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Esperar a MongoDB
        run: |
          for i in {1..30}; do
            mongo --eval "db.runCommand({ ping: 1 })" && break
            echo "Esperando a que MongoDB est√© listo..."
            sleep 2
          done

      - name: Run Python tests
        working-directory: ./inventario-service
        run: |
          PYTHONPATH=. pytest

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and test Java app
        working-directory: ./producto
        run: |
          ./mvnw test

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up --build -d


      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up --build -d
