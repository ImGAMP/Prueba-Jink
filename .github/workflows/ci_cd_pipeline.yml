name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build and Start Services
        run: |
          docker compose up -d --build

      - name: Wait for Services to be Healthy
        run: |
          echo "Esperando a que los servicios estén saludables..."

          # Esperar producto-app (Spring Boot)
          for i in {1..30}; do
            if curl -s http://localhost:8080/actuator/health | grep -q "UP"; then
              echo "producto-app está listo"
              break
            fi
            echo "Esperando producto-app... ($i/30)"
            sleep 5
          done

          # Esperar inventario-service (FastAPI)
          for i in {1..30}; do
            if curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/docs | grep -q "200"; then
              echo "inventario-service está listo"
              break
            fi
            echo "Esperando inventario-service... ($i/30)"
            sleep 5
          done

      - name: Show logs if build fails
        if: failure()
        run: |
          echo "Mostrando logs de los servicios:"
          docker compose logs producto-app
          docker compose logs inventario-service

      - name: Install Python dependencies
        working-directory: ./inventario-service
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Run Java tests (Producto service)
        working-directory: ./producto
        env:
          SPRING_PROFILES_ACTIVE: test
          API_KEY: XYZ123
        run: |
          ./mvnw clean test

      - name: Run Python tests (Inventario service)
        working-directory: ./inventario-service
        env:
          API_KEY: XYZ123
          PRODUCTOS_SERVICE_URL: http://localhost:8080
          INVENTARIO_SERVICE_URL: http://localhost:8000
          MONGO_URI: mongodb://localhost:27017/inventario_db
        run: |
          source venv/bin/activate
          PYTHONPATH=. pytest -v

      - name: Deploy Services
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Servicios desplegados exitosamente:"
          docker compose ps
